/*******************************************************************************
 * Copyright (C) 2015 Black Duck Software, Inc.
 * http://www.blackducksoftware.com/
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License version 2 only
 * as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License version 2
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 *******************************************************************************/
package com.blackducksoftware.tools.commonframework.standard.codecenter.pojo;

import java.util.Date;

import com.blackducksoftware.tools.commonframework.standard.protex.report.model.TemplatePojo;

public class VulnerabilityPojoImpl implements TemplatePojo, VulnerabilityPojo {
    private final String id;

    private String compUseId;

    private String name;

    private String description;

    private String severity;

    private String cvssScore;

    private long statusId;

    private String status;

    private String statusComment;

    private Date publishDate;

    private Date updateDate;

    private Date targetRemediationDate;

    private Date actualRemediationDate;

    public VulnerabilityPojoImpl(String id) {
	this.id = id;
    }

    /**
     *
     * Used by JPMC snapshot utility
     *
     * @param id
     * @param name
     * @param description
     * @param severity
     * @param publishDate
     * @param cvssScore
     * @param status
     * @param statusComment
     */
    public VulnerabilityPojoImpl(String id, String compUseId, String name,
	    String description, String severity, Date publishDate,
	    String cvssScore, long statusId, String status,
	    String statusComment, Date targetRemediationDate,
	    Date actualRemediationDate) {
	this.id = id;
	this.compUseId = safeTrim(compUseId);
	this.name = safeTrim(name);
	this.description = safeTrim(description);
	this.severity = safeTrim(severity);
	this.publishDate = publishDate;
	this.cvssScore = safeTrim(cvssScore);
	this.statusId = statusId;
	this.status = safeTrim(status);
	this.statusComment = safeTrim(statusComment);
	this.targetRemediationDate = targetRemediationDate;
	this.actualRemediationDate = actualRemediationDate;
    }

    private String safeTrim(String s) {
	if (s == null) {
	    return "";
	}
	return s.trim();
    }

    @Override
    public String getId() {
	return id;
    }

    @Override
    public String getCompUseId() {
	return compUseId;
    }

    @Override
    public String getName() {
	return name;
    }

    @Override
    public String getDescription() {
	return description;
    }

    @Override
    public String getSeverity() {
	return severity;
    }

    public String getCvssScore() {
	return cvssScore;
    }

    @Override
    @Deprecated
    public long getStatusId() {
	return statusId;
    }

    @Override
    @Deprecated
    public void setStatusId(long statusId) {
	this.statusId = statusId;
    }

    @Override
    public String getStatus() {
	return status;
    }

    @Override
    public String getStatusComment() {
	return statusComment;
    }

    @Override
    public Date getTargetRemediationDate() {
	return targetRemediationDate;
    }

    @Override
    public Date getActualRemediationDate() {
	return actualRemediationDate;
    }

    @Override
    public void setTargetRemediationDate(Date targetRemediationDate) {
	this.targetRemediationDate = targetRemediationDate;
    }

    @Override
    public void setActualRemediationDate(Date actualRemediationDate) {
	this.actualRemediationDate = actualRemediationDate;
    }

    public void setCvssScore(String cvssScore) {
	if (cvssScore == null) {
	    this.cvssScore = "";
	} else {
	    this.cvssScore = cvssScore.trim();
	}
    }

    @Override
    public void setStatus(String status) {
	if (status == null) {
	    this.status = "";
	} else {
	    this.status = status.trim();
	}
    }

    @Override
    public void setStatusComment(String statusComment) {
	if (statusComment == null) {
	    this.statusComment = "";
	} else {
	    this.statusComment = statusComment.trim();
	}
    }

    @Override
    public Date getPublishDate() {
	return publishDate;// df.format(publishDate);
    }

    @Override
    public void setPublishDate(Date date) {
	publishDate = date;
    }

    @Override
    public Date getUpdateDate() {
	return updateDate;
    }

    @Override
    public void setUpdateDate(Date updateDate) {
	this.updateDate = updateDate;
    }

    @Override
    public VulnerabilityPojo createCopy() {

	return new VulnerabilityPojoImpl(id, compUseId, name, description,
		severity, publishDate, cvssScore, statusId, status,
		statusComment, targetRemediationDate, actualRemediationDate);
    }

    @Override
    public int hashCode() {
	final int prime = 31;
	int result = 1;
	result = prime * result + ((id == null) ? 0 : id.hashCode());
	result = prime * result
		+ ((compUseId == null) ? 0 : compUseId.hashCode());
	return result;
    }

    @Override
    public boolean equals(Object obj) {
	if (this == obj) {
	    return true;
	}
	if (obj == null) {
	    return false;
	}
	if (getClass() != obj.getClass()) {
	    return false;
	}

	VulnerabilityPojo other = (VulnerabilityPojo) obj;

	if (id == null) {
	    if (other.getId() != null) {
		return false;
	    }
	} else if (!id.equals(other.getId())) {
	    return false;
	} else if (compUseId == null) {
	    if (other.getCompUseId() != null) {
		return false;
	    }
	} else if (!compUseId.equals(other.getCompUseId())) {
	    return false;
	}
	return true;
    }

    @Override
    public int compareTo(VulnerabilityPojo otherVulnPojo) {
	return toString().compareTo(otherVulnPojo.toString());
    }

    @Override
    public String toString() {
	StringBuilder sb = new StringBuilder("VulnerabilityPojo:  name=");
	sb.append(name);
	sb.append(";  id=");
	sb.append(id);
	sb.append(";  compUseId=");
	sb.append(compUseId);
	sb.append(";  severity=");
	sb.append(severity);
	sb.append(";  status=");
	sb.append(status);
	sb.append("; comment=");
	sb.append(statusComment);
	sb.append(";  publishDate=");
	sb.append(publishDate);
	return sb.toString();
    }
}
